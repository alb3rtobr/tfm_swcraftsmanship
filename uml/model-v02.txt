@startuml

interface Item {
   +Long getId()
   +void setId(Long id)
   +String getName()
   +void setName(String name)
   +Long getPrice()
   +void setPrice(Long price)
   +int getStock()
   +void setStock(int stock)
   +boolean equals(Object o)
   +int hashCode()
   +String toString()
}

class DomainItem {
  -Long id
  -String name
  -Long price
  -int stock
  -DomainItem()
  -DomainItem(String name, Long price, int stock)
  -DomainItem(DomainItem another)
}

class Builder << (S,#FF7700) Static >>
class Builder {
  -Long id
  -String name
  -Long price
  -int stock
  +Builder()
  +Builder withId(Long id)
  +Builder withName(String name)
  +Builder withPrice(Long price)
  +Builder withPrice(Integer price)
  +Builder withStock(int stock)
  +DomainItem build()
}

interface ItemPurchase {
  +Item getItem()
  +int getQuantity()
  +boolean equals(Object o)
  +int hashCode()
  +String toString()
}

class DomainItemPurchase {
  -DomainItem item
  -int quantity
  +DomainItemPurchase()
  +DomainItemPurchase(DomainItem item, int quantity)
}

interface Order {
  +Long getId()
  +void setId(Long id)
  +void add(ItemPurchase itemPurchase)
  +List<ItemPurchase> getItemPurchases()
  +boolean equals(Object o)
  +int hashCode()
  +String toString();
}

class DomainOrder {
  -Long id
  -List<DomainItemPurchase> itemPurchases
  +DomainOrder()
  +DomainOrder(List<DomainItemPurchase> itemPurchases)
}

class Builder. << (S,#FF7700) Static >>
class Builder. {
  -Long id
  -List<DomainItemPurchase> itemPurchases
  +Builder()
  +Builder withId(Long id)
  +Builder addItem(DomainItem item, int stock)
  +DomainOrder build()
}

class ItemOperation {
  -OperationType type
  -Item item
  +ItemOperation()
  +ItemOperation(OperationType type, Item itemResponse)
  +Item getItem()
  +void setItem(DomainItem item)
  +OperationType getType()
  +void setType(OperationType type)
  +boolean equals(Object o)
  +int hashCode()
  +String toString()
}

enum OperationType{
  CREATED
  DELETED
  -String value
  +OperationType(String value)
  +{static}OperationType fromValue(String value)
  +String toValue()
}


Item <|.. DomainItem
DomainItem *-- Builder
ItemPurchase <|.. DomainItemPurchase
DomainItemPurchase *-- DomainItem
Order <|.. DomainOrder
DomainOrder *-- DomainItemPurchase
DomainOrder *-- "Builder."
ItemOperation -- OperationType
ItemOperation *-- Item

@enduml
