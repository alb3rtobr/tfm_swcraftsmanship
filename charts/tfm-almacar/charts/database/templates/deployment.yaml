apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "mysql.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mysql.fullname" . }}
    app.kubernetes.io/component: {{ include "mysql.fullname" . }}
    app.kubernetes.io/part-of: {{ .Values.global.appname }}
    {{- range .Values.global.labels }}
    {{ .name }}: {{ .value }}
    {{- end }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mysql.fullname" . }}
      app.kubernetes.io/component: {{ include "mysql.fullname" . }}
      app.kubernetes.io/part-of: {{ .Values.global.appname }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mysql.fullname" . }}
        app.kubernetes.io/component: {{ include "mysql.fullname" . }}
        app.kubernetes.io/part-of: {{ .Values.global.appname }}
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: {{.Values.mysql.root_pass}}
        - name: MYSQL_DATABASE
          value: {{.Values.mysql.db_name}}
        - name: MYSQL_USER
          value: {{.Values.mysql.user_name}}
        - name: MYSQL_PASSWORD
          value: {{.Values.mysql.user_pass}}
        ports:
        - containerPort: {{.Values.global.mysql.port}}
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
